<% shortURL = request.protocol + request.env['HTTP_HOST'].sub(/^(m|www)\./, '') + webinar_path(@webinar) %>
<% isWebinarOwner = (user_signed_in? and current_user.id==@webinar.author_id) %>
<% user = user_signed_in? ? current_user.id.to_s : 'Guest User' %>

<hr>
<section id="show_items " class="layout_show">
  <div class="doc-show">
    <h3><%= @webinar.title %></h3>
    <h5 class="publication-title"><%= link_to(@webinar.publication.title, @webinar.publication.loop_url, :target => '_blank')%></h5>
    <div class="box-show row">
      <div class="viewerContainer col-md-8">
        <div class="viewerElement"></div>
        <%= render :partial => 'webinar_show', :locals  => { :webinar => @webinar } %>
      </div>
      <div class="viewerContainer col-md-4">
        <%= render :partial => 'webinar_related_tab', :locals  => { :webinar => @webinar } %>
      </div>
    </div>

    <!--owner-profile-->
    <div class="description-activity">
      <div class="box_description">
        <!--tool-->
        <div class="webinar_tool">
          <%= render :partial => 'webinar_tool_tab', :locals => { :shortURL => shortURL} %>
        </div>
      </div>     

    </div>
  </div>
  
</section>

<script type="text/javascript" src="/assets/erizo.js"></script>
<script type="text/javascript">
  window.onload = function () {

      console.log('<%=user%>');
      <%if isWebinarOwner%>
        var localStream = Erizo.Stream({audio: true, video: true, data: true, attributes: {'user': "<%=user%>"}});
      <%else%>
        var localStream = Erizo.Stream({audio: false, video: false, data: true, attributes: {'user': "<%=user%>"}});
      <%end%>
      var room = Erizo.Room({token: "<%=@token%>"});
      localStream.addEventListener("access-accepted", function () {

          var subscribeToStreams = function (streams) {
              for (var index in streams) {
                var stream = streams[index];
                if (localStream.getID() !== stream.getID()) {
                    room.subscribe(stream);
                }
              }
          };

          room.addEventListener("room-connected", function (roomEvent) {
            room.publish(localStream);
            subscribeToStreams(roomEvent.streams);
          });

          room.addEventListener("stream-subscribed", function(streamEvent) {
              var stream = streamEvent.stream;
              <%if isWebinarOwner%>
                console.log('*********************nuevo viewer', stream.getAttributes().user);
              <%else%>
                stream.play("webinar_video");
              <%end%>
          });

          room.addEventListener("stream-added", function (streamEvent) {
              var streams = [];
              streams.push(streamEvent.stream);
              subscribeToStreams(streams);
          });

          room.addEventListener("stream-removed", function (streamEvent) {
              // Remove stream from DOM
              var stream = streamEvent.stream;
            
          });

          room.connect();
          <%if isWebinarOwner%>
            localStream.play("webinar_video");
          <%end%>
      });
      localStream.init();
  };

</script>